#include "config.h"
#include "bits.h"
#include "lcd.h"
#include "keypad.h"
#include <pic18f4520.h>
#include "atraso.h"
#include <stdio.h>
#include <stdlib.h>

#define L0  0x80
#define L1  0xC0
#define CLR 0x01
#define ON  0x0F
#define OFF 0x0C

int vrf = 0; //veficar se a ventoinha já esta ligada ou não | 0 = desligada e 1 = ligada
int vrfa = 0; //veritica se o modo automatico esta ligado ou não | 0 = deslgiado e 1 = ligada
int l = 0, d = 0, a = 0; // caminho para separar temperatura e varias em função da ventoinha

void printf1(int);
int temperaturaV(int, int);

void main(void) {

    TRISC = 0x00;

    unsigned char tecla;
    int temperatura;
    int i = 0, j = 0;
    int slot;


    lcdInit();
    kpInit();

    lcdCommand(OFF);
    printf1(3); //Iniciando
    lcdCommand(0xC0); //pula linha
    printf1(1); //Freezer
    lcdCommand(CLR);
    printf1(2); //Opcoes

    for (;;) {
        kpDebounce();
        switch (slot) {
            case 0:
                lcdCommand(CLR); //-----------
                printf1(4); //tecla 1
                atraso_ms(1250);
                lcdCommand(CLR);
                printf1(5); //verificar
                lcdCommand(0xC0); //pula linha
                printf1(6); //temp
                atraso_ms(1250); //---------
                lcdCommand(CLR);
                printf1(7); //tecla 4
                atraso_ms(1250);
                lcdCommand(CLR);
                printf1(9); //ligar/deslig
                lcdCommand(0xC0); //pula linha
                printf1(10); //ventoinha
                atraso_ms(1250); //--------
                lcdCommand(CLR);
                printf1(8); //tecla 7
                atraso_ms(1250);
                lcdCommand(CLR);
                printf1(10); //ventoinha
                lcdCommand(0xC0); //pula linha
                printf1(11); //automatica
                atraso_ms(1250); //--------
                lcdCommand(CLR);
                printf1(14); //tecla 5
                atraso_ms(1250);
                lcdCommand(CLR);
                printf1(12); //voltar as
                lcdCommand(0xC0); //pula linha
                printf1(13); //opcoes
                atraso_ms(1250); //--------       
                lcdCommand(CLR);
                slot = 1;
                break;
            case 1:

                if (kpRead() != tecla) {
                    tecla = kpRead();

                    if (bitTst(tecla, 3)) { //Tecla 1 -- amostra temperatura
                        temperatura = temperaturaV(vrf, vrfa);
                        lcdCommand(CLR);
                        lcdData((temperatura / 1) % 10 + 48);
                        lcdData(',');
                        lcdData((temperatura / 10) % 10 + 48);
                        lcdData('C');
                    } else if (bitTst(tecla, 6)) { //Tecla 5 -- rever opcoes
                        slot = 0;
                    } else if (bitTst(tecla, 2)) {//Tecla 4 -- ligar ventoinha
                        if ((vrf == 0) && (vrfa == 0)) {// verifica se a ventoinha e modo automatico estão ligados vrf(a) = 0 = deslig
                            bitSet(PORTC, 2); // liga ventoinha
                            vrf = 1;
                        } else if ((vrf == 1) && (vrfa == 0)) { // vrf(a) = 1 = lig
                            bitClr(PORTC, 2); // desliga
                            vrf = 0;
                        } else if (vrfa == 1) { // se tiver ligado o modo automatico, não liga e nem desliga a ventoinha
                            continue;
                        }
                    } else if (bitTst(tecla, 1)) {//Tecla 7 -- ventoinha automatica
                        if (vrf == 1) {
                            bitClr(PORTC, 2); // desliga ventoinha
                            vrf = 0;
                            slot = 2;
                        } else {
                            slot = 2;
                        }

                    }
                }
                break;
            case 2:
                if (vrfa == 0) { // se tiver desativado, ela liga
                    vrfa = 1;
                    lcdCommand(CLR);
                    printf1(15); // modo
                    lcdCommand(0xC0);
                    printf1(16); // automatico ON
                    slot = 1;
                } else if (vrfa == 1) { // se tiver ligada, ela desliga
                    bitClr(PORTC, 2); // desliga ventoinha
                    vrfa = 0;
                    vrf = 0;
                    lcdCommand(CLR);
                    printf1(15); // modo
                    lcdCommand(0xC0);
                    printf1(17); // automatico OFF
                    slot = 1;
                }

                break;
        }
    }
}

void printf1(int choice) {
    int i;

    char txt1[] = {'F', 'R', 'E', 'E', 'Z', 'E', 'R', '.', '.', '.'};
    char txt2[] = {'O', 'P', 'C', 'O', 'E', 'S'};
    char txt3[] = {'I', 'N', 'I', 'C', 'I', 'A', 'N', 'D', 'O'};
    char txt4[] = {' ', ' ', ' ', ' ', 'T', 'E', 'C', 'L', 'A', ' ', '1'};
    char txt5[] = {'V', 'E', 'R', 'I', 'F', 'I', 'C', 'A', 'R'};
    char txt6[] = {'T', 'E', 'M', 'P', 'E', 'R', 'A', 'T', 'U', 'R', 'A'};
    char txt7[] = {' ', ' ', ' ', ' ', 'T', 'E', 'C', 'L', 'A', ' ', '4'};
    char txt8[] = {' ', ' ', ' ', ' ', 'T', 'E', 'C', 'L', 'A', ' ', '7'};
    char txt9[] = {'L', 'I', 'G', '/', 'D', 'E', 'S', 'L', 'I', 'G'};
    char txt10[] = {'V', 'E', 'N', 'T', 'O', 'I', 'N', 'H', 'A'};
    char txt11[] = {'A', 'U', 'T', 'O', 'M', 'A', 'T', 'I', 'C', 'A'};
    char txt12[] = {'V', 'O', 'L', 'T', 'A', 'R', ' ', 'A', 'S'};
    char txt13[] = {'O', 'P', 'C', 'O', 'E', 'S'};
    char txt14[] = {' ', ' ', ' ', ' ', 'T', 'E', 'C', 'L', 'A', ' ', '5'};
    char txt15[] = {'M', 'O', 'D', 'O'};
    char txt16[] = {'A', 'U', 'T', 'O', 'M', 'A', 'T', 'I', 'C', 'O', ' ', 'O', 'N'};
    char txt17[] = {'A', 'U', 'T', 'O', 'M', 'A', 'T', 'I', 'C', 'O', ' ', 'O', 'F', 'F'};
    char txt18[] = {'E', 'X', 'C', 'E', 'D', 'E', 'U'};
    char txt19[] = {'B', 'A', 'I', 'X', 'A'};

    if (choice == 1) { //freezer
        for (i = 0; i < 10; ++i) {
            if ((i >= 7) && (i < 10)) {
                atraso_ms(1000);
                lcdData(txt1[i]);
                atraso_ms(1000);
            } else {
                lcdData(txt1[i]);
            }
        }
    }

    if (choice == 2) {//opces
        for (i = 0; i < 6; ++i) {
            lcdData(txt2[i]);
        }

    }
    if (choice == 3) {//iniciando
        for (i = 0; i < 9; ++i) {
            lcdData(txt3[i]);
        }
    }

    if (choice == 4) {//tecla1
        for (i = 0; i < 11; ++i) {
            lcdData(txt4[i]);
        }
    }

    if (choice == 5) {//verificar
        for (i = 0; i < 9; ++i) {
            lcdData(txt5[i]);
        }
    }

    if (choice == 6) {//temperatura
        for (i = 0; i < 11; ++i) {
            lcdData(txt6[i]);
        }
    }

    if (choice == 7) {//tecla4
        for (i = 0; i < 11; ++i) {
            lcdData(txt7[i]);
        }
    }

    if (choice == 8) {//telca7
        for (i = 0; i < 11; ++i) {
            lcdData(txt8[i]);
        }
    }

    if (choice == 9) {//ligar
        for (i = 0; i < 10; ++i) {
            lcdData(txt9[i]);
        }
    }

    if (choice == 10) {//ventoinha
        for (i = 0; i < 9; ++i) {
            lcdData(txt10[i]);
        }
    }

    if (choice == 11) {//automatica
        for (i = 0; i < 10; ++i) {
            lcdData(txt11[i]);
        }
    }

    if (choice == 12) {//voltar as
        for (i = 0; i < 9; ++i) {
            lcdData(txt12[i]);
        }
    }

    if (choice == 13) {//opcoes
        for (i = 0; i < 6; ++i) {
            lcdData(txt13[i]);
        }
    }

    if (choice == 14) {//telca5
        for (i = 0; i < 11; ++i) {
            lcdData(txt14[i]);
        }
    }

    if (choice == 15) {//modo
        for (i = 0; i < 4; ++i) {
            lcdData(txt15[i]);
        }
    }

    if (choice == 16) {//automatico ON
        for (i = 0; i < 13; ++i) {
            lcdData(txt16[i]);
        }
    }

    if (choice == 17) {//automatico OFF
        for (i = 0; i < 14; ++i) {
            lcdData(txt17[i]);
        }
    }

    if (choice == 18) {//excedeu
        for (i = 0; i < 7; ++i) {
            lcdData(txt18[i]);
        }
    }

    if (choice == 19) {//baixa
        for (i = 0; i < 5; ++i) {
            lcdData(txt19[i]);
        }
    }
}

int temperaturaV(int vrf, int vrfa) {
    int tempD, tempL, tempA; // tempD = temperatura com ventoinha off | tempL = temperatura com ventoinha on | tempA = temperatura com modo automatico
    if ((vrf == 0) && (vrfa == 0)) { //"randomiza" a temperatura entra 3 e 5 quando a ventoinha e modo automatico estão desligados
        if (d == 0) {
            d = 1;
            tempD = 5;
            return tempD;
        } else if (d == 1) {
            d = 2;
            tempD = 3;
            return tempD;
        } else if (d == 2) {
            d = 0;
            tempD = 4;
            return tempD;
        }
    } else if ((vrf == 1) && (vrfa == 0)) { //"randomiza" a temperatura entra 1 e 3 quando a ventoinha e modo automatico estão ligados
        if (l == 0) {
            tempL = 1;
            l = 1;
            return tempL;
        } else if (l == 1) {
            tempL = 3;
            l = 2;
            return tempL;
        } else if (l == 2) {
            l = 0;
            tempL = 2;
            return tempL;
        }
    } else if (vrfa == 1) {// "randomiza" a temperatura entre 0 e 6 de um jeito que acione a ventoinha de forma automatica
        if (a == 0) {
            tempA = 3;
            a = 1;
            return tempA;
        } else if (a == 1) {
            tempA = 4;
            a = 2;
            return tempA;
        } else if (a == 2) {
            tempA = 5;
            a = 3;
            return tempA;
        } else if (a == 3) {
            a = 4;
            tempA = 6;
            bitSet(PORTC, 1); // liga buzzer
            atraso_ms(500);
            bitClr(PORTC, 1); // desliga buzzer
            bitSet(PORTC, 2); // liga ventoinha
            vrf = 1;
            lcdCommand(CLR);
            return tempA;
        } else if (a == 4) {
            tempA = 5;
            a = 5;
            return tempA;
        } else if (a == 5) {
            tempA = 3;
            a = 6;
            return tempA;
        } else if (a == 6) {
            tempA = 1;
            a = 7;
            return tempA;
        } else if (a == 7) {
            tempA = 0;
            a = 8;
            bitSet(PORTC, 1); // liga buzzer
            atraso_ms(500);
            bitClr(PORTC, 1); // desliga buzzer
            bitClr(PORTC, 2); // desliga ventoinha
            vrf = 0;
            return tempA;
        } else if (a == 8) {
            tempA = 2;
            a = 0;
            return tempA;
        }
    }
}
